apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: default
  labels:
    app.kubernetes.io/component: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: kibana
  template:
    metadata:
      labels:
        app.kubernetes.io/component: kibana
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:7.4.0
        ports:
        - containerPort: 5601
          name: kibana-port
        resources:
          limits:
            cpu: 1000m
          requests:
            cpu: 100m
        env:
          - name: ELASTICSEARCH_HOSTS
            value: "http://elasticsearch-svc.default.svc.cluster.local:9200"
          - name: ELASTICSEARCH_USERNAME
            value: "elastic"
          - name: ELASTICSEARCH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: elasticsearch-user-password
                key: password
          - name: XPACK_SECURITY_ENABLED
            valueFrom:
              configMapKeyRef:
                key: XPACK_AUTH_BASIC
                name: kibana-configmap
          - name: BROWSERSLIST_IGNORE_OLD_DATA
            valueFrom:
              configMapKeyRef:
                key: OLD_DATA_IGNORE
                name: kibana-configmap
          - name: XPACK_MONITORING_ENABLED
            valueFrom:
              configMapKeyRef:
                key: XPACK_MONITORING
                name: kibana-configmap
          - name: SERVER_NAME
            valueFrom:
              configMapKeyRef:
                key: NAME
                name: kibana-configmap
        volumeMounts:
        - name: config
          mountPath: /usr/share/kibana/config/kibana.yml
          readOnly: true
          subPath: kibana.yml
      volumes:
      - name: config
        configMap:
          name: kibana-configmap
